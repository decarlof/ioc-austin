#+TITLE: PV Mappings for Austin Robot PV
#+AUTHOR: Mark Wolfman
#+OPTIONS: ^:nil

* Dashboard (25idAustin:dashboard)
- *PUT PV* is the name of the PV appended to the prefix
  (e.g. 25idAustin:dashboard:play).
- *PUT cmd* is the command that is sent over the wire to the robot
  (i.e. dashboard command).
- *GET PV* is the corresponding PV for retrieving the value the value.
- *Scan cmd* is the command that is sent over the wire periodically
  (e.g. 0.5 sec) to check for new values.

  | ✓ | T | PUT PV                  | PUT cmd                      | GET PV                | Scan cmd             | dtype                   |
  |---+---+-------------------------+------------------------------+-----------------------+----------------------+-------------------------|
  | ✓ |   | :play                   | play                         |                       |                      | bool                    |
  | ✓ |   | :stop                   | stop                         |                       |                      | bool                    |
  | ✓ |   | :pause                  | pause                        |                       |                      | bool                    |
  | ✓ |   | :quit                   | quit                         |                       |                      | bool                    |
  | ✓ |   | :shutdown               | shutdown                     |                       |                      | bool                    |
  | ✓ |   | :release_brake          | brake release                |                       |                      | bool                    |
  | ✓ |   | :close_safety_popup     | close safety popup           |                       |                      | bool                    |
  | ✓ |   | :operational_mode       | set operational mode <value> | :operational_mode_rbv | get operational mode | enum (manual/automatic) |
  | ✓ |   | :power                  | power on / power off         | :power_rbv            | [check robot mode?]  | bool                    |
  | ✓ |   | :unlock_protective_stop | unlock protective stop       |                       |                      | bool                    |
  | ✓ |   | :restart_safety         | restart safety               |                       |                      | bool                    |
  | ✓ |   | :installation           | load installation <value>    |                       |                      | str                     |
  | ✓ |   | :program                | load <value>                 | :program_rbv          | get loaded program   | str                     |
  | ✓ |   |                         |                              | :program_state        | programState         | enum                    |
  | ✓ |   |                         |                              | :robot_mode           | robotmode            | enum                    |
  | ✓ |   |                         |                              | :safety_status*       | safetystatus         | enum                    |
  | ✓ |   |                         |                              | :program_saved        | isProgramSaved       | bool                    |
  | ✓ |   |                         |                              | :program_running      | running              | bool                    |
  | ✓ |   |                         |                              | :remote_control       | is in remote control | bool                    |
  | ✓ |   |                         |                              | :polyscope_version    | PolyscopeVersion     | str                     |
  | ✓ | T |                         |                              | :serial_number        | get serial number    | str                     |
  | ✓ | T |                         |                              | :model_number         | get robot model      | str                     |

  * This :safety_status PV should use the SafetyStatus enum, but some
    of the strings are longer than the 26 character limit, and so this
    will need to be factored.
** Commands we skipped
   - close popup
   - popup
   - addToLog
   - safetymode
   - clear operational mode
   - generate flight report
   - generate support file
   - version (unrecognized)
* State (25idAustin:robot)
  - TBD
* Actions
  - TBD
